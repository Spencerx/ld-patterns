<sect1 id="assertion-query">
  <title>Assertion Query</title>
  <para> 
   <emphasis>How can a dataset be tested for known patterns?</emphasis>
  </para>

  <sect2><title>Context</title>
  <para>There are a number of circumstances in which it is useful to test for patterns in a dataset. The most common is likely to be discovery of whether there is data available about a specific resource or from a specific vocabulary. Another very common use of pattern detection is to validate a dataset to check that it conforms to a specific structure. The latter is very common when testing the data generated by an application, e.g. during development or ongoing maintenance, or to check data received from third-party systems.</para>
  </sect2>

  <sect2><title>Solution</title>
  <para>Use a SPARQL <code>ASK</code> or <code>CONSTRUCT</code> query to probe the dataset for known patterns</para>
  </sect2>

  <sect2><title>Example(s)</title>
  <para>The following will return true if the specified pattern is found:</para>
<programlisting>
<![CDATA[
#Is there any data about a specific resource?
ASK WHERE {
 <http://www.example.org/person/bob> ?p ?o.
}
]]>
</programlisting>
  </sect2>

  <sect2><title>Discussion</title>
  <para>As described in the <link linkend="transformation-query">Transformation Query</link> pattern, SPARQL provides a declarative syntax for certain kinds of operations on RDF graphs. The SPARQL <code>ASK</code> query form is intentionally provided to support making assertions against an RDF dataset. It is therefore useful in the role of testing the output of an application (e.g. for unit testing) or acceptance testing incoming data received from a third-party.</para>
  <para>In some cases it is useful to run a number of queries against a dataset and generate suitable warning messages if any of the assertions succeed. Instead of using an <code>ASK</code> query, a <code>CONSTRUCT</code> query can be used instead, allowing a simple message to be generated as output. These messages can then be used to, e.g. produce a test report from a dataset:</para>
<programlisting>
<![CDATA[
CONSTRUCT {
 _:msg ex:message "Every person should have a name".
} 
WHERE {
 ?person a foaf:Person;
 OPTIONAL {
   ?person foaf:name ?name.
 }
 FILTER (!bound(?name)) 
}
]]>
</programlisting>
  </sect2>

  <sect2><title>Related</title>
  <itemizedlist>
  <listitem><link linkend="transformation-query">Transformation Query</link></listitem>
  </itemizedlist>
  </sect2>

  <sect2><title>Further Reading</title>
  <itemizedlist>
  <listitem>The <ulink url="http://isegserv.itd.rl.ac.uk/schemarama/">Schemarama</ulink> testing framework uses the <code>CONSTRUCT</code> variant of this pattern.</listitem>
  </itemizedlist>
  </sect2>
</sect1>
